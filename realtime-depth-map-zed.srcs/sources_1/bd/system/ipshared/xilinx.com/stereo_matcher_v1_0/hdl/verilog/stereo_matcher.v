// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="stereo_matcher,hls_ip_2017_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.702000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=64,HLS_SYN_DSP=10,HLS_SYN_FF=10739,HLS_SYN_LUT=15728}" *)

module stereo_matcher (
        s_axi_CONTROL_BUS_AWVALID,
        s_axi_CONTROL_BUS_AWREADY,
        s_axi_CONTROL_BUS_AWADDR,
        s_axi_CONTROL_BUS_WVALID,
        s_axi_CONTROL_BUS_WREADY,
        s_axi_CONTROL_BUS_WDATA,
        s_axi_CONTROL_BUS_WSTRB,
        s_axi_CONTROL_BUS_ARVALID,
        s_axi_CONTROL_BUS_ARREADY,
        s_axi_CONTROL_BUS_ARADDR,
        s_axi_CONTROL_BUS_RVALID,
        s_axi_CONTROL_BUS_RREADY,
        s_axi_CONTROL_BUS_RDATA,
        s_axi_CONTROL_BUS_RRESP,
        s_axi_CONTROL_BUS_BVALID,
        s_axi_CONTROL_BUS_BREADY,
        s_axi_CONTROL_BUS_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        left_in_TDATA,
        left_in_TKEEP,
        left_in_TSTRB,
        left_in_TUSER,
        left_in_TLAST,
        left_in_TID,
        left_in_TDEST,
        right_in_TDATA,
        right_in_TKEEP,
        right_in_TSTRB,
        right_in_TUSER,
        right_in_TLAST,
        right_in_TID,
        right_in_TDEST,
        disp_out_TDATA,
        disp_out_TKEEP,
        disp_out_TSTRB,
        disp_out_TUSER,
        disp_out_TLAST,
        disp_out_TID,
        disp_out_TDEST,
        left_in_TVALID,
        left_in_TREADY,
        right_in_TVALID,
        right_in_TREADY,
        disp_out_TVALID,
        disp_out_TREADY
);

parameter    C_S_AXI_CONTROL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_BUS_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;

parameter C_S_AXI_CONTROL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   s_axi_CONTROL_BUS_AWVALID;
output   s_axi_CONTROL_BUS_AWREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1:0] s_axi_CONTROL_BUS_AWADDR;
input   s_axi_CONTROL_BUS_WVALID;
output   s_axi_CONTROL_BUS_WREADY;
input  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1:0] s_axi_CONTROL_BUS_WDATA;
input  [C_S_AXI_CONTROL_BUS_WSTRB_WIDTH - 1:0] s_axi_CONTROL_BUS_WSTRB;
input   s_axi_CONTROL_BUS_ARVALID;
output   s_axi_CONTROL_BUS_ARREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1:0] s_axi_CONTROL_BUS_ARADDR;
output   s_axi_CONTROL_BUS_RVALID;
input   s_axi_CONTROL_BUS_RREADY;
output  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1:0] s_axi_CONTROL_BUS_RDATA;
output  [1:0] s_axi_CONTROL_BUS_RRESP;
output   s_axi_CONTROL_BUS_BVALID;
input   s_axi_CONTROL_BUS_BREADY;
output  [1:0] s_axi_CONTROL_BUS_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
input  [7:0] left_in_TDATA;
input  [0:0] left_in_TKEEP;
input  [0:0] left_in_TSTRB;
input  [0:0] left_in_TUSER;
input  [0:0] left_in_TLAST;
input  [0:0] left_in_TID;
input  [0:0] left_in_TDEST;
input  [7:0] right_in_TDATA;
input  [0:0] right_in_TKEEP;
input  [0:0] right_in_TSTRB;
input  [0:0] right_in_TUSER;
input  [0:0] right_in_TLAST;
input  [0:0] right_in_TID;
input  [0:0] right_in_TDEST;
output  [15:0] disp_out_TDATA;
output  [1:0] disp_out_TKEEP;
output  [1:0] disp_out_TSTRB;
output  [0:0] disp_out_TUSER;
output  [0:0] disp_out_TLAST;
output  [0:0] disp_out_TID;
output  [0:0] disp_out_TDEST;
input   left_in_TVALID;
output   left_in_TREADY;
input   right_in_TVALID;
output   right_in_TREADY;
output   disp_out_TVALID;
input   disp_out_TREADY;

reg    ap_rst_n_inv;
wire   [15:0] rows;
wire   [15:0] cols;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire    AXIvideo2Mat68_U0_ap_start;
wire    AXIvideo2Mat68_U0_ap_done;
wire    AXIvideo2Mat68_U0_ap_continue;
wire    AXIvideo2Mat68_U0_ap_idle;
wire    AXIvideo2Mat68_U0_ap_ready;
wire    AXIvideo2Mat68_U0_left_in_TREADY;
wire   [7:0] AXIvideo2Mat68_U0_img_left_data_stream_din;
wire    AXIvideo2Mat68_U0_img_left_data_stream_write;
wire    AXIvideo2Mat_U0_ap_start;
wire    AXIvideo2Mat_U0_ap_done;
wire    AXIvideo2Mat_U0_ap_continue;
wire    AXIvideo2Mat_U0_ap_idle;
wire    AXIvideo2Mat_U0_ap_ready;
wire    AXIvideo2Mat_U0_right_in_TREADY;
wire   [7:0] AXIvideo2Mat_U0_img_right_data_strea_din;
wire    AXIvideo2Mat_U0_img_right_data_strea_write;
wire    FindStereoCorrespond_1_U0_img_left_data_stream_read;
wire    FindStereoCorrespond_1_U0_img_right_data_strea_read;
wire   [15:0] FindStereoCorrespond_1_U0_disp_img_data_stream_din;
wire    FindStereoCorrespond_1_U0_disp_img_data_stream_write;
wire    FindStereoCorrespond_1_U0_ap_done;
wire    FindStereoCorrespond_1_U0_ap_start;
wire    FindStereoCorrespond_1_U0_ap_ready;
wire    FindStereoCorrespond_1_U0_ap_idle;
wire    FindStereoCorrespond_1_U0_ap_continue;
wire    Mat2AXIvideo_U0_ap_start;
wire    Mat2AXIvideo_U0_ap_done;
wire    Mat2AXIvideo_U0_ap_continue;
wire    Mat2AXIvideo_U0_ap_idle;
wire    Mat2AXIvideo_U0_ap_ready;
wire    Mat2AXIvideo_U0_disp_img_data_stream_read;
wire   [15:0] Mat2AXIvideo_U0_disp_out_TDATA;
wire    Mat2AXIvideo_U0_disp_out_TVALID;
wire   [1:0] Mat2AXIvideo_U0_disp_out_TKEEP;
wire   [1:0] Mat2AXIvideo_U0_disp_out_TSTRB;
wire   [0:0] Mat2AXIvideo_U0_disp_out_TUSER;
wire   [0:0] Mat2AXIvideo_U0_disp_out_TLAST;
wire   [0:0] Mat2AXIvideo_U0_disp_out_TID;
wire   [0:0] Mat2AXIvideo_U0_disp_out_TDEST;
wire    ap_sync_continue;
wire    img_left_data_stream_full_n;
wire   [7:0] img_left_data_stream_dout;
wire    img_left_data_stream_empty_n;
wire    img_right_data_strea_full_n;
wire   [7:0] img_right_data_strea_dout;
wire    img_right_data_strea_empty_n;
wire    disp_img_data_stream_full_n;
wire   [15:0] disp_img_data_stream_dout;
wire    disp_img_data_stream_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_AXIvideo2Mat68_U0_ap_ready;
wire    ap_sync_AXIvideo2Mat68_U0_ap_ready;
reg   [1:0] AXIvideo2Mat68_U0_ap_ready_count;
reg    ap_sync_reg_AXIvideo2Mat_U0_ap_ready;
wire    ap_sync_AXIvideo2Mat_U0_ap_ready;
reg   [1:0] AXIvideo2Mat_U0_ap_ready_count;
reg    ap_sync_reg_FindStereoCorrespond_1_U0_ap_ready;
wire    ap_sync_FindStereoCorrespond_1_U0_ap_ready;
reg   [1:0] FindStereoCorrespond_1_U0_ap_ready_count;
reg    ap_sync_reg_Mat2AXIvideo_U0_ap_ready;
wire    ap_sync_Mat2AXIvideo_U0_ap_ready;
reg   [1:0] Mat2AXIvideo_U0_ap_ready_count;
wire    AXIvideo2Mat68_U0_start_full_n;
wire    AXIvideo2Mat68_U0_start_write;
wire    AXIvideo2Mat_U0_start_full_n;
wire    AXIvideo2Mat_U0_start_write;
wire    FindStereoCorrespond_1_U0_start_full_n;
wire    FindStereoCorrespond_1_U0_start_write;
wire    Mat2AXIvideo_U0_start_full_n;
wire    Mat2AXIvideo_U0_start_write;

// power-on initialization
initial begin
#0 ap_sync_reg_AXIvideo2Mat68_U0_ap_ready = 1'b0;
#0 AXIvideo2Mat68_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_AXIvideo2Mat_U0_ap_ready = 1'b0;
#0 AXIvideo2Mat_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_FindStereoCorrespond_1_U0_ap_ready = 1'b0;
#0 FindStereoCorrespond_1_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_Mat2AXIvideo_U0_ap_ready = 1'b0;
#0 Mat2AXIvideo_U0_ap_ready_count = 2'd0;
end

stereo_matcher_CONTROL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_BUS_DATA_WIDTH ))
stereo_matcher_CONTROL_BUS_s_axi_U(
    .AWVALID(s_axi_CONTROL_BUS_AWVALID),
    .AWREADY(s_axi_CONTROL_BUS_AWREADY),
    .AWADDR(s_axi_CONTROL_BUS_AWADDR),
    .WVALID(s_axi_CONTROL_BUS_WVALID),
    .WREADY(s_axi_CONTROL_BUS_WREADY),
    .WDATA(s_axi_CONTROL_BUS_WDATA),
    .WSTRB(s_axi_CONTROL_BUS_WSTRB),
    .ARVALID(s_axi_CONTROL_BUS_ARVALID),
    .ARREADY(s_axi_CONTROL_BUS_ARREADY),
    .ARADDR(s_axi_CONTROL_BUS_ARADDR),
    .RVALID(s_axi_CONTROL_BUS_RVALID),
    .RREADY(s_axi_CONTROL_BUS_RREADY),
    .RDATA(s_axi_CONTROL_BUS_RDATA),
    .RRESP(s_axi_CONTROL_BUS_RRESP),
    .BVALID(s_axi_CONTROL_BUS_BVALID),
    .BREADY(s_axi_CONTROL_BUS_BREADY),
    .BRESP(s_axi_CONTROL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .rows(rows),
    .cols(cols),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

AXIvideo2Mat68 AXIvideo2Mat68_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(AXIvideo2Mat68_U0_ap_start),
    .ap_done(AXIvideo2Mat68_U0_ap_done),
    .ap_continue(AXIvideo2Mat68_U0_ap_continue),
    .ap_idle(AXIvideo2Mat68_U0_ap_idle),
    .ap_ready(AXIvideo2Mat68_U0_ap_ready),
    .left_in_TDATA(left_in_TDATA),
    .left_in_TVALID(left_in_TVALID),
    .left_in_TREADY(AXIvideo2Mat68_U0_left_in_TREADY),
    .left_in_TKEEP(left_in_TKEEP),
    .left_in_TSTRB(left_in_TSTRB),
    .left_in_TUSER(left_in_TUSER),
    .left_in_TLAST(left_in_TLAST),
    .left_in_TID(left_in_TID),
    .left_in_TDEST(left_in_TDEST),
    .rows(rows),
    .cols(cols),
    .img_left_data_stream_din(AXIvideo2Mat68_U0_img_left_data_stream_din),
    .img_left_data_stream_full_n(img_left_data_stream_full_n),
    .img_left_data_stream_write(AXIvideo2Mat68_U0_img_left_data_stream_write)
);

AXIvideo2Mat AXIvideo2Mat_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(AXIvideo2Mat_U0_ap_start),
    .ap_done(AXIvideo2Mat_U0_ap_done),
    .ap_continue(AXIvideo2Mat_U0_ap_continue),
    .ap_idle(AXIvideo2Mat_U0_ap_idle),
    .ap_ready(AXIvideo2Mat_U0_ap_ready),
    .right_in_TDATA(right_in_TDATA),
    .right_in_TVALID(right_in_TVALID),
    .right_in_TREADY(AXIvideo2Mat_U0_right_in_TREADY),
    .right_in_TKEEP(right_in_TKEEP),
    .right_in_TSTRB(right_in_TSTRB),
    .right_in_TUSER(right_in_TUSER),
    .right_in_TLAST(right_in_TLAST),
    .right_in_TID(right_in_TID),
    .right_in_TDEST(right_in_TDEST),
    .rows(rows),
    .cols(cols),
    .img_right_data_strea_din(AXIvideo2Mat_U0_img_right_data_strea_din),
    .img_right_data_strea_full_n(img_right_data_strea_full_n),
    .img_right_data_strea_write(AXIvideo2Mat_U0_img_right_data_strea_write)
);

FindStereoCorrespond_1 FindStereoCorrespond_1_U0(
    .rows(rows),
    .cols(cols),
    .img_left_data_stream_dout(img_left_data_stream_dout),
    .img_left_data_stream_empty_n(img_left_data_stream_empty_n),
    .img_left_data_stream_read(FindStereoCorrespond_1_U0_img_left_data_stream_read),
    .img_right_data_strea_dout(img_right_data_strea_dout),
    .img_right_data_strea_empty_n(img_right_data_strea_empty_n),
    .img_right_data_strea_read(FindStereoCorrespond_1_U0_img_right_data_strea_read),
    .disp_img_data_stream_din(FindStereoCorrespond_1_U0_disp_img_data_stream_din),
    .disp_img_data_stream_full_n(disp_img_data_stream_full_n),
    .disp_img_data_stream_write(FindStereoCorrespond_1_U0_disp_img_data_stream_write),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .rows_ap_vld(1'b1),
    .cols_ap_vld(1'b1),
    .ap_done(FindStereoCorrespond_1_U0_ap_done),
    .ap_start(FindStereoCorrespond_1_U0_ap_start),
    .ap_ready(FindStereoCorrespond_1_U0_ap_ready),
    .ap_idle(FindStereoCorrespond_1_U0_ap_idle),
    .ap_continue(FindStereoCorrespond_1_U0_ap_continue)
);

Mat2AXIvideo Mat2AXIvideo_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Mat2AXIvideo_U0_ap_start),
    .ap_done(Mat2AXIvideo_U0_ap_done),
    .ap_continue(Mat2AXIvideo_U0_ap_continue),
    .ap_idle(Mat2AXIvideo_U0_ap_idle),
    .ap_ready(Mat2AXIvideo_U0_ap_ready),
    .rows(rows),
    .cols(cols),
    .disp_img_data_stream_dout(disp_img_data_stream_dout),
    .disp_img_data_stream_empty_n(disp_img_data_stream_empty_n),
    .disp_img_data_stream_read(Mat2AXIvideo_U0_disp_img_data_stream_read),
    .disp_out_TDATA(Mat2AXIvideo_U0_disp_out_TDATA),
    .disp_out_TVALID(Mat2AXIvideo_U0_disp_out_TVALID),
    .disp_out_TREADY(disp_out_TREADY),
    .disp_out_TKEEP(Mat2AXIvideo_U0_disp_out_TKEEP),
    .disp_out_TSTRB(Mat2AXIvideo_U0_disp_out_TSTRB),
    .disp_out_TUSER(Mat2AXIvideo_U0_disp_out_TUSER),
    .disp_out_TLAST(Mat2AXIvideo_U0_disp_out_TLAST),
    .disp_out_TID(Mat2AXIvideo_U0_disp_out_TID),
    .disp_out_TDEST(Mat2AXIvideo_U0_disp_out_TDEST)
);

fifo_w8_d1_A_x img_left_data_stream_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat68_U0_img_left_data_stream_din),
    .if_full_n(img_left_data_stream_full_n),
    .if_write(AXIvideo2Mat68_U0_img_left_data_stream_write),
    .if_dout(img_left_data_stream_dout),
    .if_empty_n(img_left_data_stream_empty_n),
    .if_read(FindStereoCorrespond_1_U0_img_left_data_stream_read)
);

fifo_w8_d1_A_x img_right_data_strea_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_right_data_strea_din),
    .if_full_n(img_right_data_strea_full_n),
    .if_write(AXIvideo2Mat_U0_img_right_data_strea_write),
    .if_dout(img_right_data_strea_dout),
    .if_empty_n(img_right_data_strea_empty_n),
    .if_read(FindStereoCorrespond_1_U0_img_right_data_strea_read)
);

fifo_w16_d1_A_x disp_img_data_stream_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(FindStereoCorrespond_1_U0_disp_img_data_stream_din),
    .if_full_n(disp_img_data_stream_full_n),
    .if_write(FindStereoCorrespond_1_U0_disp_img_data_stream_write),
    .if_dout(disp_img_data_stream_dout),
    .if_empty_n(disp_img_data_stream_empty_n),
    .if_read(Mat2AXIvideo_U0_disp_img_data_stream_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_AXIvideo2Mat68_U0_ap_ready <= 1'b0;
    end else begin
        if ((1'b1 == (ap_start & ap_sync_ready))) begin
            ap_sync_reg_AXIvideo2Mat68_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_AXIvideo2Mat68_U0_ap_ready <= ap_sync_AXIvideo2Mat68_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= 1'b0;
    end else begin
        if ((1'b1 == (ap_start & ap_sync_ready))) begin
            ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= ap_sync_AXIvideo2Mat_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_FindStereoCorrespond_1_U0_ap_ready <= 1'b0;
    end else begin
        if ((1'b1 == (ap_start & ap_sync_ready))) begin
            ap_sync_reg_FindStereoCorrespond_1_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_FindStereoCorrespond_1_U0_ap_ready <= ap_sync_FindStereoCorrespond_1_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Mat2AXIvideo_U0_ap_ready <= 1'b0;
    end else begin
        if ((1'b1 == (ap_start & ap_sync_ready))) begin
            ap_sync_reg_Mat2AXIvideo_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Mat2AXIvideo_U0_ap_ready <= ap_sync_Mat2AXIvideo_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((AXIvideo2Mat68_U0_ap_ready == 1'b0) & (1'b1 == ap_sync_ready))) begin
        AXIvideo2Mat68_U0_ap_ready_count <= (AXIvideo2Mat68_U0_ap_ready_count - 2'd1);
    end else if (((1'b1 == AXIvideo2Mat68_U0_ap_ready) & (ap_sync_ready == 1'b0))) begin
        AXIvideo2Mat68_U0_ap_ready_count <= (AXIvideo2Mat68_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sync_ready) & (AXIvideo2Mat_U0_ap_ready == 1'b0))) begin
        AXIvideo2Mat_U0_ap_ready_count <= (AXIvideo2Mat_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (1'b1 == AXIvideo2Mat_U0_ap_ready))) begin
        AXIvideo2Mat_U0_ap_ready_count <= (AXIvideo2Mat_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sync_ready) & (FindStereoCorrespond_1_U0_ap_ready == 1'b0))) begin
        FindStereoCorrespond_1_U0_ap_ready_count <= (FindStereoCorrespond_1_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (1'b1 == FindStereoCorrespond_1_U0_ap_ready))) begin
        FindStereoCorrespond_1_U0_ap_ready_count <= (FindStereoCorrespond_1_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sync_ready) & (Mat2AXIvideo_U0_ap_ready == 1'b0))) begin
        Mat2AXIvideo_U0_ap_ready_count <= (Mat2AXIvideo_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (1'b1 == Mat2AXIvideo_U0_ap_ready))) begin
        Mat2AXIvideo_U0_ap_ready_count <= (Mat2AXIvideo_U0_ap_ready_count + 2'd1);
    end
end

assign AXIvideo2Mat68_U0_ap_continue = 1'b1;

assign AXIvideo2Mat68_U0_ap_start = (ap_start & (ap_sync_reg_AXIvideo2Mat68_U0_ap_ready ^ 1'b1));

assign AXIvideo2Mat68_U0_start_full_n = 1'b0;

assign AXIvideo2Mat68_U0_start_write = 1'b0;

assign AXIvideo2Mat_U0_ap_continue = 1'b1;

assign AXIvideo2Mat_U0_ap_start = (ap_start & (ap_sync_reg_AXIvideo2Mat_U0_ap_ready ^ 1'b1));

assign AXIvideo2Mat_U0_start_full_n = 1'b0;

assign AXIvideo2Mat_U0_start_write = 1'b0;

assign FindStereoCorrespond_1_U0_ap_continue = 1'b1;

assign FindStereoCorrespond_1_U0_ap_start = (ap_start & (ap_sync_reg_FindStereoCorrespond_1_U0_ap_ready ^ 1'b1));

assign FindStereoCorrespond_1_U0_start_full_n = 1'b0;

assign FindStereoCorrespond_1_U0_start_write = 1'b0;

assign Mat2AXIvideo_U0_ap_continue = 1'b1;

assign Mat2AXIvideo_U0_ap_start = (ap_start & (ap_sync_reg_Mat2AXIvideo_U0_ap_ready ^ 1'b1));

assign Mat2AXIvideo_U0_start_full_n = 1'b0;

assign Mat2AXIvideo_U0_start_write = 1'b0;

assign ap_done = Mat2AXIvideo_U0_ap_done;

assign ap_idle = (AXIvideo2Mat68_U0_ap_idle & AXIvideo2Mat_U0_ap_idle & FindStereoCorrespond_1_U0_ap_idle & Mat2AXIvideo_U0_ap_idle);

assign ap_ready = ap_sync_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_AXIvideo2Mat68_U0_ap_ready = (AXIvideo2Mat68_U0_ap_ready | ap_sync_reg_AXIvideo2Mat68_U0_ap_ready);

assign ap_sync_AXIvideo2Mat_U0_ap_ready = (AXIvideo2Mat_U0_ap_ready | ap_sync_reg_AXIvideo2Mat_U0_ap_ready);

assign ap_sync_FindStereoCorrespond_1_U0_ap_ready = (FindStereoCorrespond_1_U0_ap_ready | ap_sync_reg_FindStereoCorrespond_1_U0_ap_ready);

assign ap_sync_Mat2AXIvideo_U0_ap_ready = (Mat2AXIvideo_U0_ap_ready | ap_sync_reg_Mat2AXIvideo_U0_ap_ready);

assign ap_sync_continue = 1'b1;

assign ap_sync_done = Mat2AXIvideo_U0_ap_done;

assign ap_sync_ready = (ap_sync_AXIvideo2Mat68_U0_ap_ready & ap_sync_AXIvideo2Mat_U0_ap_ready & ap_sync_FindStereoCorrespond_1_U0_ap_ready & ap_sync_Mat2AXIvideo_U0_ap_ready);

assign disp_out_TDATA = Mat2AXIvideo_U0_disp_out_TDATA;

assign disp_out_TDEST = Mat2AXIvideo_U0_disp_out_TDEST;

assign disp_out_TID = Mat2AXIvideo_U0_disp_out_TID;

assign disp_out_TKEEP = Mat2AXIvideo_U0_disp_out_TKEEP;

assign disp_out_TLAST = Mat2AXIvideo_U0_disp_out_TLAST;

assign disp_out_TSTRB = Mat2AXIvideo_U0_disp_out_TSTRB;

assign disp_out_TUSER = Mat2AXIvideo_U0_disp_out_TUSER;

assign disp_out_TVALID = Mat2AXIvideo_U0_disp_out_TVALID;

assign left_in_TREADY = AXIvideo2Mat68_U0_left_in_TREADY;

assign right_in_TREADY = AXIvideo2Mat_U0_right_in_TREADY;

endmodule //stereo_matcher
